{
  "name": "tokenator",
  "description": "Lightweight Connect Middleware access control with tokens",
  "keywords": [
    "api",
    "token",
    "middleware",
    "connect"
  ],
  "main": "./lib/tokenator",
  "author": {
    "name": "George Ornbo",
    "email": "george@shapeshed.com",
    "url": "http://shapeshed.com"
  },
  "version": "0.0.4",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/shapeshed/tokenator.git"
  },
  "devDependencies": {
    "mocha": ">=0.14.1",
    "connect": ">=2.0.0"
  },
  "bugs": {
    "url": "https://github.com/shapeshed/tokenator/issues"
  },
  "scripts": {
    "test": "mocha"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shapeshed/tokenator/raw/master/LICENSE"
    }
  ],
  "readme": "# Tokenator\n\n[![Build Status](https://secure.travis-ci.org/shapeshed/tokenator.png)](http://travis-ci.org/shapeshed/tokenator)\n\nTokenator is a lightweight piece of [Connect][1] Middleware to provide access control based on a token. It is design to be used with APIs.\n\n## Installation\n\nvia [npm][2]\n\n    npm install tokenator\n\n## Usage\n\nTokenator expects the API token to be sent by the client in a header named 'api-token'. \n\nOn the server tokenator expects an array of valid tokens.\n\nIf a client tries to connect without a token or an invalid token a 401 response will be returned. \n\nFor [connect][1]\n\n    var connect = require('connect'),\n        http = require('http'),\n        tokenator = require('tokenator');\n\n    function accessGranted(req, res){\n      res.end('Tokenator says yes!');\n    }\n    var app = connect()\n      .use(tokenator(['5917f138c80b512d14a4ee2fe05a17dc', '7b1a47ab847f7534b507c6ae4a763118']))\n      .use(accessGranted)\n     \n    http.Server(app).listen(3000);\n\nFor [express][3]\n\n    var express = require('express'),\n        tokenator = require('tokenator');\n\n    var app = module.exports = express.createServer();\n\n    app.configure(function(){\n      app.use(tokenator(['5917f138c80b512d14a4ee2fe05a17dc', '7b1a47ab847f7534b507c6ae4a763118']))\n    });\n\n    app.get('/', function(req, res){\n      res.send('Tokenator says yes!');\n    });\n\n    app.listen(3000);\n\n[1]: https://github.com/senchalabs/connect/\n[2]: http://npmjs.org/\n[3]: http://expressjs.com/\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/shapeshed/tokenator",
  "_id": "tokenator@0.0.4",
  "dist": {
    "shasum": "e9aa28a637569362b2d39db9cfaea49a02597af7"
  },
  "_from": "tokenator@0.0.4",
  "_resolved": "https://registry.npmjs.org/tokenator/-/tokenator-0.0.4.tgz"
}
